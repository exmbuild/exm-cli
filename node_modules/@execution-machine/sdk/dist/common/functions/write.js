"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.writeFunction = void 0;
const vars_1 = require("../vars");
const commons_1 = require("../utils/commons");
const writeOpFailure_1 = require("../exceptions/writeOpFailure");
const writeFunction = async (functionId, writeOps, emToken) => {
    let body = {
        functionId
    };
    body.inputs = Array.isArray(writeOps) ? writeOps : [writeOps];
    if (body.inputs.length > 499) {
        throw new writeOpFailure_1.WriteOpFailure("Only 499 writes are allowed in a single query.");
    }
    const data = await (0, commons_1.postRequest)(`${vars_1.EmVars.EM_BACKEND_URL}/transactions?token=${emToken}`, body);
    let bodyJson = await data.json();
    if (data.ok) {
        return bodyJson;
    }
    else {
        if (bodyJson && bodyJson.statusCode && bodyJson.error && bodyJson.message) {
            throw new writeOpFailure_1.WriteOpFailure(`${bodyJson.statusCode}: Internal server error while sending write operation to function ${functionId}. "Error: ${bodyJson.message}"`, bodyJson.statusCode);
        }
        else {
            throw new writeOpFailure_1.WriteOpFailure(`${data.status}: Something went wrong, write operation for function ${functionId} could not be sent.`);
        }
    }
};
exports.writeFunction = writeFunction;
//# sourceMappingURL=write.js.map