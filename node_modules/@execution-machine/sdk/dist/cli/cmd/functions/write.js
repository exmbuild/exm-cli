"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.functionWriteCmd = void 0;
const dotenv_1 = require("dotenv");
const em_wrapper_1 = require("../em-wrapper");
const writeOpFailure_1 = require("../../../common/exceptions/writeOpFailure");
const functionWriteCmd = async (txId, opts) => {
    const tagsObj = (0, dotenv_1.parse)(opts.tags.join('\n'));
    const tagsArray = Object.keys(tagsObj).map((i) => ({
        name: i,
        value: tagsObj[i]
    }));
    let input;
    try {
        input = JSON.parse(opts.input);
    }
    catch (e) {
        input = opts.input;
    }
    if (opts.token) {
        em_wrapper_1.em.changeToken(opts.token);
    }
    await em_wrapper_1.em.functions.write(txId, [
        {
            input,
            tags: tagsArray
        }
    ]).then(({ data: { pseudoId, execution: { state, validity } } }) => {
        if (validity[pseudoId]) {
            console.log(`Write query ${pseudoId} (pseudo-id) was successfully executed`);
        }
        else {
            console.log(`Write query ${pseudoId} (pseudo-id) could not be executed`);
        }
        if (opts.showOutput) {
            console.log(`\n${JSON.stringify({ state, validity }, null, 2)}`);
        }
    }).catch((e) => {
        if (e instanceof writeOpFailure_1.WriteOpFailure) {
            if (e.statusCode === 403) {
                console.log('403: Write operation could not be completed because the resource could not be accessed or token is invalid.');
            }
            else {
                console.error(e.message);
            }
        }
        else {
            console.error(e.message);
        }
        process.exit(1);
    });
};
exports.functionWriteCmd = functionWriteCmd;
//# sourceMappingURL=write.js.map